FROM ruby:3.4-slim

# Build arguments
ARG RUBY_VERSION=3.4.1
ARG CPP_DRIVER_VERSION=2.16.2

# Set environment variables
ENV DEBIAN_FRONTEND=noninteractive
ENV BUNDLE_PATH=/usr/local/bundle
ENV BUNDLE_BIN=/usr/local/bundle/bin
ENV GEM_HOME=/usr/local/bundle
ENV PATH $BUNDLE_BIN:$PATH
ENV CPP_DRIVER_VERSION=${CPP_DRIVER_VERSION}

# Install system dependencies for Cassandra C++ driver and development
RUN apt-get update && apt-get install -y \
    # Build essentials
    build-essential \
    cmake \
    pkg-config \
    # C++ compiler and libraries
    g++ \
    gcc \
    libc6-dev \
    # DataStax C++ driver dependencies
    libuv1-dev \
    libssl-dev \
    zlib1g-dev \
    # Additional dependencies
    libgmp-dev \
    libffi-dev \
    libyaml-dev \
    libreadline-dev \
    libncurses5-dev \
    # Git for gem dependencies
    git \
    # Network utilities
    curl \
    wget \
    netcat-openbsd \
    # Debug tools
    gdb \
    valgrind \
    strace \
    # Documentation tools
    pandoc \
    # Utilities
    vim \
    nano \
    htop \
    tree \
    jq \
    # Clean up
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Install DataStax C++ driver from source with libuv fix
RUN mkdir -p /opt/cpp-driver && \
    cd /tmp && \
    echo "Downloading DataStax C++ Driver v${CPP_DRIVER_VERSION}..." && \
    wget "https://github.com/datastax/cpp-driver/archive/${CPP_DRIVER_VERSION}.tar.gz" && \
    tar -xzf "${CPP_DRIVER_VERSION}.tar.gz" && \
    cd "cpp-driver-${CPP_DRIVER_VERSION}" && \
    mkdir build && \
    cd build && \
    echo "Configuring build with CMake..." && \
    cmake .. \
        -DCMAKE_BUILD_TYPE=Release \
        -DCASS_BUILD_STATIC=ON \
        -DCASS_BUILD_SHARED=ON \
        -DCASS_USE_STATIC_LIBS=OFF \
        -DCASS_USE_ZLIB=ON \
        -DCASS_USE_OPENSSL=ON \
        -DCASS_INSTALL_PKG_CONFIG=ON \
        -DCMAKE_INSTALL_PREFIX=/usr/local \
        -DCMAKE_C_FLAGS="-fPIC" \
        -DCMAKE_CXX_FLAGS="-fPIC" && \
    echo "Building with $(nproc) cores..." && \
    make -j$(nproc) && \
    echo "Installing driver..." && \
    make install && \
    ldconfig && \
    # Copy source for reference
    cp -r "/tmp/cpp-driver-${CPP_DRIVER_VERSION}" /opt/cpp-driver/source && \
    cd / && \
    rm -rf /tmp/cpp-driver-* && \
    # Verify installation
    pkg-config --modversion cassandra && \
    echo "DataStax C++ Driver v${CPP_DRIVER_VERSION} installed successfully"

# Create application directory
WORKDIR /workspace

# Copy gemspec and Gemfile first
COPY cassandra-cpp.gemspec Gemfile* ./
COPY lib/cassandra_cpp/version.rb lib/cassandra_cpp/

# Configure bundler
RUN gem install bundler:2.4.22 && \
    bundle config set --local deployment 'false' && \
    bundle config set --local path '/usr/local/bundle' && \
    bundle config set --local without 'production' && \
    bundle config set --local jobs 4 && \
    bundle config set --local retry 3

# Install development gems
RUN bundle install

# Copy application code
COPY . .

# Create necessary directories
RUN mkdir -p \
    log \
    tmp \
    coverage \
    doc \
    spec/support/fixtures \
    .bundle

# Set up git safe directory (for containers)
RUN git config --global --add safe.directory /workspace

# Install additional development tools
RUN gem install \
    solargraph \
    ruby-debug-ide \
    debase \
    ruby-prof

# Configure development environment
ENV RUBY_ENV=development
ENV RAILS_ENV=development
ENV RACK_ENV=development

# Expose ports for development services
EXPOSE 3000 8080 9292

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD ruby -e "puts 'Ruby OK'" || exit 1

# Default command
CMD ["bash"]